name: Test
on:
  - pull_request
  - push

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # Install pipenv
      - name: Install pipenv
        run: python3 -m pip install --upgrade pipenv

      # create .venv folder
      - name: create .venv folder
        run: mkdir -p .venv

      # caching dependencies
      - name: Caching Dependencies
        uses: actions/cache@v2
        id: cache-dependencies
        with:
          path: ./.venv
          key: ${{ matrix.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: ${{ matrix.os }}-python-${{ steps.setup-python.outputs.python-version }}-pipenv-

      # install dependencies
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: pipenv install --dev --verbose

      # Run bash script
      - name: run Bash script
        run: pipenv run bash ./.github/check.sh

